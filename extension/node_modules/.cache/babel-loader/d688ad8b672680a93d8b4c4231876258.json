{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main/Main';\nimport { v4 as uuidv4 } from 'uuid';\nvar URL = \"http://localhost:5000\";\nvar wrapper = document.createElement('div');\nwrapper.id = 'extension-wrapper';\ndocument.body.appendChild(wrapper);\n\nfunction messageHandler(e, sdk, sdkEvent) {\n  if (e.origin === URL) {\n    if (e.data.action === \"postSnippetToBody\") {\n      sdkEvent.composeView.setBodyText(e.data.snippet);\n    }\n\n    if (e.data.action === \"getUser\") {\n      var user = sdk.User.getEmailAddress();\n      var message = {\n        'action': \"setUser\",\n        'user': user\n      };\n      document.getElementById(\"amplemarketExtension\").contentWindow.postMessage(message, \"*\");\n    }\n\n    if (e.data.action === \"saveSnippetFromBody\") {\n      var snippetBody = sdkEvent.composeView.getTextContent();\n      console.log(snippetBody);\n      var name = prompt(\"Please enter a name for your snippet\");\n      fetch(URL + \"/api/addSnippet\", {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: sdk.User.getEmailAddress(),\n          snippet: snippetBody,\n          name: name === \"\" ? \"Untitled\" : name,\n          id: uuidv4(snippetBody)\n        })\n      }).then(function (res) {\n        if (res.ok) {\n          document.getElementById(\"amplemarketExtension\").contentWindow.postMessage({\n            'action': \"fetchContents\"\n          }, \"*\");\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n\n    if (e.data.action === \"deleteSnippet\") {\n      fetch(URL + \"/api/deleteSnippet\", {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: sdk.User.getEmailAddress(),\n          id: e.data.id\n        })\n      }).then(function (res) {\n        if (res.ok) {\n          document.getElementById(\"amplemarketExtension\").contentWindow.postMessage({\n            'action': \"deleteSnippetSuccess\"\n          }, \"*\");\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }\n}\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var sdk, eventListenerAdded, frameMounted;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return InboxSDK.load(2, \"sdk_gmailSnippet_74536b3008\");\n\n          case 2:\n            sdk = _context.sent;\n            eventListenerAdded = false;\n            frameMounted = false;\n            sdk.Compose.registerComposeViewHandler(function (composeView) {\n              if (sdk.User.getEmailAddress().includes(\"@gmail.com\")) {\n                composeView.addButton({\n                  title: \"My Nifty Button!\",\n                  iconUrl: 'https://lh3.googleusercontent.com/AEOBTuMlfOrUtW6ATvrQBtvO1LFMX2ZLqV8XAOXDc6yYQk0iLJBXJy_tB5xOve3_B2QlzUkcG5oQwAD6Mqg2O48n=w128-h128-e365-rj-sc0x00ffffff',\n                  onClick: function onClick(sdkEvent) {\n                    if (!eventListenerAdded) {\n                      window.addEventListener(\"message\", function (e) {\n                        return messageHandler(e, sdk, sdkEvent);\n                      });\n                    }\n\n                    eventListenerAdded = true;\n                    if (!frameMounted) ReactDOM.render( /*#__PURE__*/React.createElement(Main, null), document.getElementById('extension-wrapper'));\n                  }\n                });\n                composeView.on('destroy', function (event) {\n                  ReactDOM.render(null, document.getElementById('extension-wrapper'));\n                  window.removeEventListener(\"message\", messageHandler);\n                });\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain().then(function (res) {\n  return console.log(res);\n}, function (err) {\n  return console.log(err);\n});","map":{"version":3,"sources":["/home/joaoeira/Documents/amplemarket-gmailExtension/extension/src/js/snippetPlugin.js"],"names":["React","ReactDOM","Main","v4","uuidv4","URL","wrapper","document","createElement","id","body","appendChild","messageHandler","e","sdk","sdkEvent","origin","data","action","composeView","setBodyText","snippet","user","User","getEmailAddress","message","getElementById","contentWindow","postMessage","snippetBody","getTextContent","console","log","name","prompt","fetch","method","mode","headers","JSON","stringify","then","res","ok","err","main","InboxSDK","load","eventListenerAdded","frameMounted","Compose","registerComposeViewHandler","includes","addButton","title","iconUrl","onClick","window","addEventListener","render","on","event","removeEventListener"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Main from './Main/Main'\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst URL = \"http://localhost:5000\"\n\nconst wrapper = document.createElement('div')\n  wrapper.id = 'extension-wrapper'\n  document.body.appendChild(wrapper)\n\n\nfunction messageHandler(e, sdk, sdkEvent){\n  if(e.origin === URL){\n    if(e.data.action === \"postSnippetToBody\"){\n      sdkEvent.composeView.setBodyText(e.data.snippet)\n    }\n    if(e.data.action === \"getUser\"){\n      const user = sdk.User.getEmailAddress()\n      const message = {\n        'action': \"setUser\",\n        'user': user\n      }\n      document.getElementById(\"amplemarketExtension\").contentWindow.postMessage(message, \"*\")\n    }\n\n    if(e.data.action === \"saveSnippetFromBody\"){\n      const snippetBody = sdkEvent.composeView.getTextContent();\n      console.log(snippetBody)\n      const name = prompt(\"Please enter a name for your snippet\")\n      fetch(URL+\"/api/addSnippet\", {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: sdk.User.getEmailAddress(),\n          snippet: snippetBody,\n          name: name === \"\" ? \"Untitled\" : name,\n          id: uuidv4(snippetBody)\n        })\n      })\n      .then(res => {\n        if(res.ok){\n          document.getElementById(\"amplemarketExtension\").contentWindow.postMessage({\n            'action': \"fetchContents\",\n          }, \"*\")\n        }\n      })\n      .catch(err=> console.log(err));\n    }\n    \n    if(e.data.action === \"deleteSnippet\"){\n      fetch(URL+\"/api/deleteSnippet\", {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: sdk.User.getEmailAddress(),\n          id: e.data.id\n        })\n      })\n      .then(res => {\n        if(res.ok){\n          document.getElementById(\"amplemarketExtension\").contentWindow.postMessage({\n            'action': \"deleteSnippetSuccess\",\n          }, \"*\")\n        }\n      })\n      .catch(err=> console.log(err));\n    }\n  }\n}\n\n\nasync function main(){\n    \n    const sdk = await InboxSDK.load(2,\"sdk_gmailSnippet_74536b3008\")\n    let eventListenerAdded = false;\n    let frameMounted = false;\n    sdk.Compose.registerComposeViewHandler(function(composeView){\n        if(sdk.User.getEmailAddress().includes(\"@gmail.com\")){\n          composeView.addButton({\n            title: \"My Nifty Button!\",\n            iconUrl: 'https://lh3.googleusercontent.com/AEOBTuMlfOrUtW6ATvrQBtvO1LFMX2ZLqV8XAOXDc6yYQk0iLJBXJy_tB5xOve3_B2QlzUkcG5oQwAD6Mqg2O48n=w128-h128-e365-rj-sc0x00ffffff',\n            onClick: function(sdkEvent) {\n              if(!eventListenerAdded){\n                window.addEventListener(\"message\", e => messageHandler(e,sdk,sdkEvent) )\n              }\n              eventListenerAdded=true;\n              if(!frameMounted) ReactDOM.render(<Main />,document.getElementById('extension-wrapper'))\n            },\n          });\n          composeView.on('destroy', function(event) {\n            ReactDOM.render(null,document.getElementById('extension-wrapper'))\n            window.removeEventListener(\"message\", messageHandler)\n          });\n        }\n      })\n      ;\n}\nmain().then(res => console.log(res), err => console.log(err))\n\n\n\n"]},"metadata":{},"sourceType":"module"}