{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main/Main';\nimport { v4 as uuidv4 } from 'uuid';\nvar URL = 'http://localhost:5000';\nvar wrapper = document.createElement('div');\nwrapper.id = 'extension-wrapper';\ndocument.body.appendChild(wrapper);\n\nfunction messageHandler(e, sdk, sdkEvent) {\n  if (e.origin === URL) {\n    if (e.data.action === 'postSnippetToBody') {\n      sdkEvent.composeView.setBodyText(e.data.snippet);\n    }\n\n    if (e.data.action === 'getUser') {\n      var user = sdk.User.getEmailAddress();\n      var message = {\n        action: 'setUser',\n        user: user\n      };\n      document.getElementById('amplemarketExtension').contentWindow.postMessage(message, '*');\n    }\n\n    if (e.data.action === 'saveSnippetFromBody') {\n      var snippetBody = sdkEvent.composeView.getTextContent();\n      console.log(snippetBody);\n      var name = prompt('Please enter a name for your snippet'); //null if prompt canceled\n\n      if (name !== null) {\n        fetch(URL + '/api/addSnippet', {\n          method: 'POST',\n          mode: 'cors',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user: sdk.User.getEmailAddress(),\n            snippet: snippetBody,\n            name: name === '' ? 'Untitled' : name,\n            id: uuidv4(snippetBody)\n          })\n        }).then(function (res) {\n          if (res.ok) {\n            document.getElementById('amplemarketExtension').contentWindow.postMessage({\n              action: 'fetchContents'\n            }, '*');\n          }\n        })[\"catch\"](function (err) {\n          return console.log(err);\n        });\n      }\n    }\n\n    if (e.data.action === 'deleteSnippet') {\n      fetch(URL + '/api/deleteSnippet', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: sdk.User.getEmailAddress(),\n          id: e.data.id\n        })\n      }).then(function (res) {\n        if (res.ok) {\n          document.getElementById('amplemarketExtension').contentWindow.postMessage({\n            action: 'deleteSnippetSuccess'\n          }, '*');\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }\n}\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var sdk, eventListenerAdded;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return InboxSDK.load(2, 'sdk_gmailSnippet_74536b3008');\n\n          case 2:\n            sdk = _context.sent;\n            eventListenerAdded = false;\n            sdk.Compose.registerComposeViewHandler(function ComposeViewRegister(composeView) {\n              if (sdk.User.getEmailAddress().includes('@gmail.com')) {\n                composeView.addButton({\n                  title: 'My Nifty Button!',\n                  iconUrl: 'https://lh3.googleusercontent.com/AEOBTuMlfOrUtW6ATvrQBtvO1LFMX2ZLqV8XAOXDc6yYQk0iLJBXJy_tB5xOve3_B2QlzUkcG5oQwAD6Mqg2O48n=w128-h128-e365-rj-sc0x00ffffff',\n                  onClick: function onClick(sdkEvent) {\n                    function setMessageHandler(e) {\n                      messageHandler(e, sdk, sdkEvent);\n                    }\n\n                    if (eventListenerAdded) {\n                      window.removeEventListener('message', setMessageHandler);\n                      eventListenerAdded = false;\n                    }\n\n                    window.addEventListener('message', setMessageHandler);\n                    eventListenerAdded = true;\n                    ReactDOM.render( /*#__PURE__*/React.createElement(Main, null), document.getElementById('extension-wrapper'));\n                  }\n                });\n                composeView.on('destroy', function ComposeViewDestroy(event) {\n                  ReactDOM.unmountComponentAtNode(document.getElementById('extension-wrapper'));\n                });\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain().then(function (res) {\n  return console.log(res);\n}, function (err) {\n  return console.log(err);\n});","map":{"version":3,"sources":["/home/joaoeira/Documents/amplemarket-gmailExtension/extension/src/js/plugin.js"],"names":["React","ReactDOM","Main","v4","uuidv4","URL","wrapper","document","createElement","id","body","appendChild","messageHandler","e","sdk","sdkEvent","origin","data","action","composeView","setBodyText","snippet","user","User","getEmailAddress","message","getElementById","contentWindow","postMessage","snippetBody","getTextContent","console","log","name","prompt","fetch","method","mode","headers","JSON","stringify","then","res","ok","err","main","InboxSDK","load","eventListenerAdded","Compose","registerComposeViewHandler","ComposeViewRegister","includes","addButton","title","iconUrl","onClick","setMessageHandler","window","removeEventListener","addEventListener","render","on","ComposeViewDestroy","event","unmountComponentAtNode"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Main from './Main/Main'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nconst URL = 'http://localhost:5000'\n\nconst wrapper = document.createElement('div')\nwrapper.id = 'extension-wrapper'\ndocument.body.appendChild(wrapper)\n\nfunction messageHandler(e, sdk, sdkEvent) {\n    if (e.origin === URL) {\n        if (e.data.action === 'postSnippetToBody') {\n            sdkEvent.composeView.setBodyText(e.data.snippet)\n        }\n        if (e.data.action === 'getUser') {\n            const user = sdk.User.getEmailAddress()\n            const message = {\n                action: 'setUser',\n                user: user,\n            }\n            document\n                .getElementById('amplemarketExtension')\n                .contentWindow.postMessage(message, '*')\n        }\n\n        if (e.data.action === 'saveSnippetFromBody') {\n            const snippetBody = sdkEvent.composeView.getTextContent()\n            console.log(snippetBody)\n            const name = prompt('Please enter a name for your snippet') //null if prompt canceled\n            if (name !== null) {\n                fetch(URL + '/api/addSnippet', {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        user: sdk.User.getEmailAddress(),\n                        snippet: snippetBody,\n                        name: name === '' ? 'Untitled' : name,\n                        id: uuidv4(snippetBody),\n                    }),\n                })\n                    .then((res) => {\n                        if (res.ok) {\n                            document\n                                .getElementById('amplemarketExtension')\n                                .contentWindow.postMessage(\n                                    {\n                                        action: 'fetchContents',\n                                    },\n                                    '*'\n                                )\n                        }\n                    })\n                    .catch((err) => console.log(err))\n            }\n        }\n\n        if (e.data.action === 'deleteSnippet') {\n            fetch(URL + '/api/deleteSnippet', {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    user: sdk.User.getEmailAddress(),\n                    id: e.data.id,\n                }),\n            })\n                .then((res) => {\n                    if (res.ok) {\n                        document\n                            .getElementById('amplemarketExtension')\n                            .contentWindow.postMessage(\n                                {\n                                    action: 'deleteSnippetSuccess',\n                                },\n                                '*'\n                            )\n                    }\n                })\n                .catch((err) => console.log(err))\n        }\n    }\n}\n\nasync function main() {\n    const sdk = await InboxSDK.load(2, 'sdk_gmailSnippet_74536b3008')\n    let eventListenerAdded = false\n\n    sdk.Compose.registerComposeViewHandler(function ComposeViewRegister(\n        composeView\n    ) {\n        if (sdk.User.getEmailAddress().includes('@gmail.com')) {\n            composeView.addButton({\n                title: 'My Nifty Button!',\n                iconUrl:\n                    'https://lh3.googleusercontent.com/AEOBTuMlfOrUtW6ATvrQBtvO1LFMX2ZLqV8XAOXDc6yYQk0iLJBXJy_tB5xOve3_B2QlzUkcG5oQwAD6Mqg2O48n=w128-h128-e365-rj-sc0x00ffffff',\n                onClick: function (sdkEvent) {\n                    function setMessageHandler(e) {\n                        messageHandler(e, sdk, sdkEvent)\n                    }\n\n                    if (eventListenerAdded) {\n                        window.removeEventListener('message', setMessageHandler)\n                        eventListenerAdded = false\n                    }\n                    window.addEventListener('message', setMessageHandler)\n                    eventListenerAdded = true\n                    ReactDOM.render(\n                        <Main />,\n                        document.getElementById('extension-wrapper')\n                    )\n                },\n            })\n            composeView.on('destroy', function ComposeViewDestroy(event) {\n                ReactDOM.unmountComponentAtNode(\n                    document.getElementById('extension-wrapper')\n                )\n            })\n        }\n    })\n}\nmain().then(\n    (res) => console.log(res),\n    (err) => console.log(err)\n)\n"]},"metadata":{},"sourceType":"module"}