{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nexport default function Main() {\n  var _useState = useState(10),\n      _useState2 = _slicedToArray(_useState, 2),\n      x = _useState2[0],\n      setX = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      y = _useState4[0],\n      setY = _useState4[1];\n\n  var _useState5 = useState(\"100%\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      opacity = _useState6[0],\n      setOpacity = _useState6[1];\n\n  function computeCornerPos(width, height, mousePos) {\n    return [];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      width: \"300px\",\n      height: \"600px\",\n      opacity: opacity,\n      top: String(y) + \"px\",\n      left: String(x) + \"px\",\n      right: \"0px\",\n      backgroundColor: \"ghostwhite\",\n      zIndex: \"99999\"\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      top: \"0px\",\n      width: \"100%\",\n      height: \"50px\",\n      backgroundColor: \"red\"\n    },\n    draggable: true,\n    onDragStart: function onDragStart(e) {\n      {\n        setOpacity(\"hidden\");\n        console.log(\"1%\");\n      }\n    },\n    onDragEnd: function onDragEnd(e) {\n      return setOpacity(\"100%\");\n    },\n    onDrag: function onDrag(e) {\n      if (e.clientX !== 0 && e.clientY !== 0) {\n        setX(e.clientX);\n        setY(e.clientY);\n      }\n    }\n  }), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"http://localhost:5000/templates\"\n  }));\n}","map":{"version":3,"sources":["/home/joaoeira/Documents/amplemarket-gmailExtension/extension/src/js/Main/Main.js"],"names":["React","useState","Main","x","setX","y","setY","opacity","setOpacity","computeCornerPos","width","height","mousePos","position","top","String","left","right","backgroundColor","zIndex","e","console","log","clientX","clientY"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA,kBAERD,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,MAEnBE,CAFmB;AAAA,MAEhBC,IAFgB;;AAAA,mBAGRH,QAAQ,CAAC,EAAD,CAHA;AAAA;AAAA,MAGnBI,CAHmB;AAAA,MAGhBC,IAHgB;;AAAA,mBAIIL,QAAQ,CAAC,MAAD,CAJZ;AAAA;AAAA,MAInBM,OAJmB;AAAA,MAIVC,UAJU;;AAK1B,WAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,MAAjC,EAAwCC,QAAxC,EAAiD;AAC7C,WAAO,EAAP;AACH;;AAED,sBAAQ;AAAK,IAAA,KAAK,EAAE;AAChBC,MAAAA,QAAQ,EAAE,OADM;AAEhBH,MAAAA,KAAK,EAAC,OAFU;AAGhBC,MAAAA,MAAM,EAAE,OAHQ;AAIhBJ,MAAAA,OAAO,EAAEA,OAJO;AAKhBO,MAAAA,GAAG,EAAEC,MAAM,CAACV,CAAD,CAAN,GAAU,IALC;AAMhBW,MAAAA,IAAI,EAAED,MAAM,CAACZ,CAAD,CAAN,GAAU,IANA;AAOhBc,MAAAA,KAAK,EAAC,KAPU;AAQhBC,MAAAA,eAAe,EAAC,YARA;AAShBC,MAAAA,MAAM,EAAE;AATQ;AAAZ,kBAUA;AACI,IAAA,KAAK,EAAE;AAACN,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,GAAG,EAAC,KAA3B;AAAiCJ,MAAAA,KAAK,EAAC,MAAvC;AAA+CC,MAAAA,MAAM,EAAC,MAAtD;AAA6DO,MAAAA,eAAe,EAAC;AAA7E,KADX;AAEI,IAAA,SAAS,EAAE,IAFf;AAGI,IAAA,WAAW,EAAE,qBAAAE,CAAC,EAAG;AAAC;AAACZ,QAAAA,UAAU,CAAC,QAAD,CAAV;AAAqBa,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAAkB;AAAC,KAH/D;AAII,IAAA,SAAS,EAAE,mBAAAF,CAAC;AAAA,aAAGZ,UAAU,CAAC,MAAD,CAAb;AAAA,KAJhB;AAKI,IAAA,MAAM,EAAE,gBAAAY,CAAC,EAAI;AAAC,UAAGA,CAAC,CAACG,OAAF,KAAc,CAAd,IAAmBH,CAAC,CAACI,OAAF,KAAa,CAAnC,EAAqC;AAAEpB,QAAAA,IAAI,CAACgB,CAAC,CAACG,OAAH,CAAJ;AAAiBjB,QAAAA,IAAI,CAACc,CAAC,CAACI,OAAH,CAAJ;AAAgB;AAAC;AAL3F,IAVA,eAiBA;AAAQ,IAAA,GAAG,EAAC;AAAZ,IAjBA,CAAR;AAoBH","sourcesContent":["import React, { useState } from 'react'\n\nexport default function Main(){\n\n    const [x, setX] = useState(10)\n    const [y, setY] = useState(10)\n    const [opacity, setOpacity] = useState(\"100%\")\n    function computeCornerPos(width, height,mousePos){\n        return([])\n    }\n\n    return  <div style={{\n        position: \"fixed\",\n        width:\"300px\", \n        height: \"600px\",\n        opacity: opacity,\n        top: String(y)+\"px\",\n        left: String(x)+\"px\",\n        right:\"0px\",\n        backgroundColor:\"ghostwhite\",\n        zIndex: \"99999\"}}>\n            <div \n                style={{position: \"absolute\", top:\"0px\",width:\"100%\", height:\"50px\",backgroundColor:\"red\"}} \n                draggable={true} \n                onDragStart={e=> {{setOpacity(\"hidden\");console.log(\"1%\")}}} \n                onDragEnd={e=> setOpacity(\"100%\")} \n                onDrag={e => {if(e.clientX !== 0 && e.clientY !==0){ setX(e.clientX); setY(e.clientY)}}}>\n            </div>\n            <iframe src=\"http://localhost:5000/templates\"></iframe>\n        </div>\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}