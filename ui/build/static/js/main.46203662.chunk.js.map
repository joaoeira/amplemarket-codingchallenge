{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Template","props","template","name","snippet","id","className","onClick","message","action","window","parent","postMessage","isManaging","event","stopPropagation","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","App","fetchContents","fetch","user","then","res","json","data","setTemplates","useState","templates","setIsManaging","setUser","useEffect","addEventListener","e","origin","style","scrollbarWidth","map","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46203662.chunk.js","sourcesContent":["import './App.css'\n\nimport React, { useEffect, useState } from 'react'\n\nfunction Template(props) {\n    const { name, snippet, id } = props.template\n\n    function postSnippetToBody() {\n        const message = {\n            action: 'postSnippetToBody',\n            snippet: snippet,\n        }\n        window.parent.postMessage(message, '*')\n    }\n\n    function deleteSnippet(event) {\n        event.stopPropagation()\n        const message = {\n            action: 'deleteSnippet',\n            id: id,\n        }\n        window.parent.postMessage(message, '*')\n    }\n\n    return (\n        <div\n            className=\"flex py-2 flex-col h-auto justify-between px-2 hover:bg-gray-100 cursor-pointer\"\n            onClick={postSnippetToBody}\n        >\n            <div className=\"flex flex-row space-x-1 items-center\">\n                {props.isManaging ? (\n                    <svg\n                        onClick={deleteSnippet}\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 text-gray-700 hover:bg-black hover:text-white rounded-full\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        />\n                    </svg>\n                ) : null}\n\n                <p className=\"text-gray-700 font-medium  flex self-start text-base capitalize\">\n                    {name}\n                </p>\n            </div>\n            <p className=\"text-gray-500 mt-1 flex self-center w-full text-sm break-all text-justify\">\n                {snippet}\n            </p>\n        </div>\n    )\n}\n\nfunction App() {\n    function saveSnippetFromBody() {\n        const message = {\n            action: 'saveSnippetFromBody',\n        }\n        window.parent.postMessage(message, '*')\n    }\n\n    function getUser() {\n        const message = {\n            action: 'getUser',\n        }\n        window.parent.postMessage(message, '*')\n    }\n\n    function handleIsManaging() {\n        setIsManaging(!isManaging)\n    }\n\n    function fetchContents() {\n        fetch(`http://localhost:5000/api/getSnippets?user=${user}`).then(\n            (res) => {\n                res.json().then((data) => {\n                    if (data !== []) setTemplates(data)\n                })\n            }\n        )\n    }\n    const [templates, setTemplates] = useState([])\n    const [isManaging, setIsManaging] = useState(false)\n    const [user, setUser] = useState('')\n\n    useEffect(() => {\n        window.addEventListener('message', (e) => {\n            if (e.origin === 'https://mail.google.com') {\n                if (e.data.action === 'setUser') {\n                    setUser(e.data.user)\n                }\n            }\n        })\n        getUser()\n    }, [])\n\n    useEffect(() => {\n        if (user !== '') {\n            fetchContents()\n\n            window.addEventListener('message', (e) => {\n                if (e.origin === 'https://mail.google.com') {\n                    if (e.data.action === 'fetchContents') {\n                        fetchContents()\n                    }\n                    if (e.data.action === 'deleteSnippetSuccess') {\n                        fetchContents()\n                    }\n                }\n            })\n        }\n    }, [user])\n\n    return (\n        <div className=\"shadow-inner bg-white w-screen h-screen m-0 relative\">\n            <div\n                style={{ scrollbarWidth: 'none' }}\n                className=\"h-4/5 shadow-inner w-full overflow-y-scroll\"\n            >\n                {templates.map((template) => {\n                    return (\n                        <Template\n                            key={template.id}\n                            template={{\n                                name: template.name,\n                                snippet: template.snippet,\n                                id: template.id,\n                            }}\n                            isManaging={isManaging}\n                        />\n                    )\n                })}\n            </div>\n            <div\n                style={{ backgroundColor: '#FAFAFA' }}\n                className=\"shadow absolute bottom-0 h-1/5 w-full border-t-2 border-gray-300\"\n            >\n                <div\n                    className=\"pl-2 h-1/2 flex items-center space-x-2 text-sm hover:bg-gray-200 active:bg-gray-300\"\n                    onClick={saveSnippetFromBody}\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={1.5}\n                            d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-gray-800\">\n                        Turn this draft into a snippet\n                    </p>\n                </div>\n                <div\n                    className=\"pl-2 h-1/2 flex items-center space-x-2 text-sm hover:bg-gray-200 active:bg-gray-300\"\n                    onClick={handleIsManaging}\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={1.5}\n                            d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n                        />\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={1.5}\n                            d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-gray-800\">Manage snippets</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}